<?xml version="1.0" encoding="utf-8" ?>
<CodistriGrid>
  <CiFormName>Wonderful form</CiFormName>
  <CiRowFetchAction>
    <ActionSQL>
      select TaskCode,
        TaskDescription,
        TaskType,
        CustomerCode,
        Category,
        PrimaryDeveloper,
        HoursSold,
        FixedPrice,
        HoursBought,
        TaskStatus,
        CompletedDate,
        InvoiceNumber,
        Billable,
        BuyPrice,
        SellPrice
        from    tblTasks
        where   TaskCode = @TaskCode
    </ActionSQL>
  </CiRowFetchAction>
  <CiColumn>
    <ColumnName>TaskCode</ColumnName>
    <ColumnCaption>Task</ColumnCaption>
    <Editable>false</Editable>
  </CiColumn>
  <CiColumn>
    <ColumnName>TaskDescription</ColumnName>
    <ColumnCaption>Description</ColumnCaption>
  </CiColumn>
  <CiColumn>
    <ColumnName>FixedPrice</ColumnName>
    <ColumnCaption>Fixed Price</ColumnCaption>
    <ColumnType>Checkbox</ColumnType>
  </CiColumn>
  <CiColumn>
    <ColumnCaption>Comment</ColumnCaption>
    <ColumnType>Label</ColumnType>
    <DefaultValue>Aloha my friends. What would you like to do? Eat fine food, drink classic wines? What to do about my life? So how can we fix the issues with today's society?</DefaultValue>
  </CiColumn>
  <CiColumn>
    <ColumnName>HoursSold</ColumnName>
    <ColumnCaption>Sell (H)</ColumnCaption>
    <ColumnType>Number</ColumnType>
    <ColumnFormat>0.00</ColumnFormat>
  </CiColumn>
  <CiColumn>
    <ColumnName>HoursBought</ColumnName>
    <ColumnCaption>Buy (H)</ColumnCaption>
    <ColumnType>Number</ColumnType>
    <ColumnFormat>0.00</ColumnFormat>
  </CiColumn>
  <CiColumn>
    <ColumnName>SellPrice</ColumnName>
    <ColumnCaption>Sell Price ($)</ColumnCaption>
    <ColumnType>Number</ColumnType>
    <ColumnFormat>0.00</ColumnFormat>
  </CiColumn>
  <CiColumn>
    <ColumnName>BuyPrice</ColumnName>
    <ColumnCaption>Buy Price ($)</ColumnCaption>
    <ColumnType>Number</ColumnType>
    <ColumnFormat>0.00</ColumnFormat>
  </CiColumn>
  <CiColumn>
    <ColumnName>TaskType</ColumnName>
    <ColumnCaption>Task Type</ColumnCaption>
    <DropdownSQL>
      select  Description as [Task Type]
      from    tblDropdown
      where   Type = 'TaskType'
      order by Description
    </DropdownSQL>
    <DropdownToFitLargestText>true</DropdownToFitLargestText>
  </CiColumn>
  <CiColumn>
    <ColumnName>CustomerCode</ColumnName>
    <ColumnCaption>Customer</ColumnCaption>
    <DropdownSQL>
      select  CustomerCode as Code,
              Customer
      from    tblCustomers
      order by CustomerCode
    </DropdownSQL>
    <DropdownToFitLargestText>true</DropdownToFitLargestText>
  </CiColumn>
  <CiColumn>
    <ColumnName>Category</ColumnName>
    <ColumnCaption>Category</ColumnCaption>
    <DropdownSQL>
      select  Category
      from    tblCategories
      where   CustomerCode = @CustomerCode
      order by Category
    </DropdownSQL>
    <DropdownToFitLargestText>true</DropdownToFitLargestText>
  </CiColumn>
  <CiColumn>
    <ColumnName>PrimaryDeveloper</ColumnName>
    <ColumnCaption>Staff</ColumnCaption>
    <DropdownSQL>
      select  StaffCode as Staff
      from    tblStaff
      order by StaffCode
    </DropdownSQL>
  </CiColumn>
  <CiColumn>
    <ColumnName>CompletedDate</ColumnName>
    <ColumnCaption>Due Date</ColumnCaption>
    <ColumnType>Date</ColumnType>
    <ColumnFormat>dd/MM/yyyy</ColumnFormat>	
  </CiColumn>
  <CiColumn>
    <ColumnName>InvoiceNumber</ColumnName>
    <ColumnCaption>Invoice</ColumnCaption>
    <DropdownSQL>
      select  InvoiceNumber
      from    tblInvoices
      where   DispatchDate is null
      and     CustomerCode = @CustomerCode
      order by InvoiceNumber
    </DropdownSQL>
    <DropdownToFitLargestText>true</DropdownToFitLargestText>
  </CiColumn>
  <CiColumn>
    <ColumnName>CommunicationsLog</ColumnName>
    <ColumnCaption>Communications Log</ColumnCaption>
    <ColumnType>Grid</ColumnType>
    <DefaultValue>CommunicationsLog.dxl</DefaultValue>
  </CiColumn>
  <CiColumn>
    <ColumnName>TaskStatus</ColumnName>
    <ColumnCaption>Status</ColumnCaption>
    <DropdownSQL>
      select  Description as [Status]
      from    tblDropdown
      where   Type = 'TaskStatus'
      order by Description
    </DropdownSQL>
    <ColumnAlignment>left</ColumnAlignment>
    <DropdownToFitLargestText>false</DropdownToFitLargestText>
  </CiColumn>
  <CiColumn>
    <ColumnName>Timings</ColumnName>
    <ColumnCaption>Timings Log</ColumnCaption>
    <ColumnType>Grid</ColumnType>
    <DefaultValue>Timings.dxl</DefaultValue>
  </CiColumn>
  <CiColumn>
    <ColumnName>Billable</ColumnName>
    <ColumnCaption>Billable</ColumnCaption>
    <ColumnType>Checkbox</ColumnType>
  </CiColumn>
  <CiRowUpdateAction>
    <ActionSQL>
      update  tblTasks
      set     TaskDescription    = @TaskDescription,
              TaskType           = @TaskType,
              CustomerCode       = @CustomerCode,
              Category           = @Category,
              InvoiceNumber      = @InvoiceNumber,
              PrimaryDeveloper   = @PrimaryDeveloper,
              CompletedDate      = @CompletedDate,
              FixedPrice         = @FixedPrice,
              TaskStatus         = @TaskStatus,
	      Billable		 = @Billable,
	      HoursSold		 = @HoursSold,
	      SellPrice		 = @SellPrice,
	      BuyPrice		 = @BuyPrice
      where   TaskCode           = @TaskCode
    </ActionSQL>
  </CiRowUpdateAction>
  <CiRowInsertAction>
    <ActionSQL>
      select  'T'+right('000000'+ trim(str(1+Right(iif(isnull(Max(Taskcode)), 'T000000', Max(Taskcode)), 6))) ,6) as TaskCode
      from    tblTasks
    </ActionSQL>
    <ActionSQL>
      insert
      into  tblTasks
      (     TaskCode,
            TaskDescription,
            TaskType,
            CustomerCode,
            Category,
            InvoiceNumber,
            PrimaryDeveloper,
            CompletedDate,
            FixedPrice,
            TaskStatus,
            Billable,
	    SellPrice,
	    BuyPrice,
	    HoursSold
      )
      values
      (     @TaskCode,
            @TaskDescription,
            @TaskType,
            @CustomerCode,
            @Category,
            @InvoiceNumber,
            @PrimaryDeveloper,
            @CompletedDate,
            @FixedPrice,
            @TaskStatus,
            @Billable,
	    0.0,
	    0.0,
	    @HoursSold
       )
    </ActionSQL>
    <ActionSQL>
	UPDATE tblTasks INNER JOIN tblStaff ON tblTasks.PrimaryDeveloper = tblStaff.StaffCode
	SET	SellPrice = HoursSold * tblStaff.SellHourlyRate
	WHERE tblTasks.TaskCode = @TaskCode
    </ActionSQL>
  </CiRowInsertAction>
  <CiRowDeleteAction>
    <ActionSQL>
      delete from tblTasks where TaskCode = @TaskCode
    </ActionSQL>
  </CiRowDeleteAction>
  <CiAction>
    <ActionName>Start Timer</ActionName>
    <MessageSQL>
      select  Comment
      from    tblCommunicationsLog
      where   TaskCode = @TaskCode
      and     Comment like "Note:%"
    </MessageSQL>
    <ActionSQL>
      insert
      into  tblTimings
      (     TaskCode,
            StartTime,
            EndTime,
            Staff
      )
      values
      (     @TaskCode,
            Now(),
            null,
            @CI_DefaultUser
      )
    </ActionSQL>
    <ActionSQL>
      	UPDATE tblTasks SET
	 TaskStatus = "1: In Progress"
      	WHERE @TaskStatus is null
	AND TaskCode = @TaskCode		
    </ActionSQL>
    <ActionSQL>
        select iif(@TaskStatus is null,'1: In Progress',@TaskStatus) as TaskStatus
    </ActionSQL>
    <VisibleSQL>
      select  1
      from    tblSingleton
      where   not exists
      (       select  1
              from    tblTimings
              where   TaskCode = @TaskCode
              and     EndTime is null
              and     Staff = @CI_DefaultUser
      )
    </VisibleSQL>
  </CiAction>
  <CiAction>
    <ActionName>Stop Timer</ActionName>
    <Prompt>Enter a comment</Prompt>
    <ActionSQL>
      update  tblTimings
      set     EndTime   = Now()
      where   TaskCode   = @TaskCode
      and     EndTime   is null
      and     Staff =   @CI_DefaultUser
    </ActionSQL>
    <ActionSQL>
      select BuyHourlyRate from tblStaff where StaffCode = @PrimaryDeveloper
    </ActionSQL>
    <ActionSQL>
      update tblTasks set    
	HoursBought = DSum("BuyHour","qryHourlyCalculation","TaskCode='" + @TaskCode + "'"),
	HoursSold = iif(@FixedPrice = false,DSum("SellHour","qryHourlyCalculation","TaskCode='" + @TaskCode + "'"),HoursSold),
 	SellPrice = iif(@FixedPrice = false,DSum("SellPrice","qryHourlyCalculation","TaskCode='" + @TaskCode + "'"),SellPrice),
 	BuyPrice =  iif(@FixedPrice = false,DSum("BuyPrice","qryHourlyCalculation","TaskCode='" + @TaskCode + "'"),@BuyHourlyRate*HoursSold)
      WHERE TaskCode = @TaskCode
    </ActionSQL>
    <ActionSQL>
      select  1 + iif(isnull(max(LogID)), 0, max(LogID)) as LogID
      from    tblCommunicationsLog
      where   TaskCode = @TaskCode
    </ActionSQL>
    <ActionSQL>
      insert
      into    tblCommunicationsLog
      (       LogID,
              Author,
              LogDate,
              TaskCode,
              Comment,
              AttachmentName
       )
       SELECT @LogID,
              @CI_DefaultUser,
              NOW(),
              @TaskCode,
              @CI_Prompt,
              null
       FROM tblSingleton where @CI_Prompt is not null
    </ActionSQL>
    <ActionSQL>
      SELECT  	HoursBought,
		HoursSold,
		SellPrice,
		BuyPrice
      from    tblTasks
      where   TaskCode = @TaskCode
    </ActionSQL>
    <VisibleSQL>
      select  1
      from    tblTimings
      where   TaskCode   = @TaskCode
      and     EndTime is null
      and     Staff = @CI_DefaultUser
    </VisibleSQL>
  </CiAction>
  <CiAction>
    <ActionName>Swap Timer</ActionName>
    <Confirm>Swap timer to this task?</Confirm>
    <ActionSQL>
      	update tblTimings
        set    TaskCode = @TaskCode
        where  EndTime is null
        and    Staff = @CI_DefaultUser
    </ActionSQL>
    <VisibleSQL>
      select  1
      from    tblSingleton
      where   not exists
      (       select  1
              from    tblTimings
              where   TaskCode = @TaskCode
              and     EndTime is null
              and     Staff = @CI_DefaultUser
      )
      and     exists
      (       select  1
              from    tblTimings
              where   EndTime is null
              and     Staff = @CI_DefaultUser
      )
      and @CI_DefaultUser = 'Adrian'
    </VisibleSQL>
  </CiAction>
  <CiAction>
    <ActionName>Create ccadmin task</ActionName>
    <StringPromptSQL>SELECT 'Enter date of current Monday (dd/mm/yyyy)'</StringPromptSQL>
    <ActionSQL>
      select  'T'+right('000000'+ trim(str(1+Right(iif(isnull(Max(Taskcode)), 'T000000', Max(Taskcode)), 6))) ,6) as TaskCode
      from    tblTasks
    </ActionSQL>
    <ActionSQL>
      insert
      into  tblTasks
      (     TaskCode,
            TaskDescription,
            TaskType,
            CustomerCode,
            Category,
            PrimaryDeveloper,
	    HoursSold,
            FixedPrice,
            SellPrice,
            Billable
      )
      values
      (     @TaskCode,
            'Create ccadmin and polling report for week ' + @CI_Prompt,
            'B: Support',
            'CCL',
            'CHEMIST CLUB',
            'Adrian',
	    0.5,
            1,
            50,
            1
      )
    </ActionSQL>
    <VisibleSQL>
      select  1
      from    tblSingleton
      where   @CustomerCode = 'CCL'
      and     @CI_DefaultUser = 'Adrian'
    </VisibleSQL>
    <AutoRefresh>true</AutoRefresh>
  </CiAction>
  <CiAction>
    <ActionName>Create CCL generic task</ActionName>
    <StringPromptSQL>SELECT 'Enter date of end of period (dd/mm/yyyy)'</StringPromptSQL>
    <ActionSQL>
      select  'T'+right('000000'+ trim(str(1+Right(iif(isnull(Max(Taskcode)), 'T000000', Max(Taskcode)), 6))) ,6) as TaskCode
      from    tblTasks
    </ActionSQL>
    <ActionSQL>
      insert
      into  tblTasks
      (     TaskCode,
            TaskDescription,
            TaskType,
            CustomerCode,
            Category,
            PrimaryDeveloper,
            CompletedDate,
            Billable
      )
      values
      (     @TaskCode,
            'Provide phone, email and miscellaneous support to Pinpoint',
            'B: Support',
            'CCL',
            'CHEMIST CLUB',
            'Adrian',
            @CI_Prompt,
            1
      )
    </ActionSQL>
    <VisibleSQL>
      select  1
      from    tblSingleton
      where   @CustomerCode = 'CCL'
      and     @CI_DefaultUser = 'Adrian'
    </VisibleSQL>
    <AutoRefresh>true</AutoRefresh>
  </CiAction>
  <CiAction>
    <ActionName>Create monthly tasks</ActionName>
    <StringPromptSQL>SELECT 'Enter a period (e.g. Q4/2014)'</StringPromptSQL>
    <ActionSQL>
      select  'T'+right('000000'+ trim(str(1+Right(iif(isnull(Max(Taskcode)), 'T000000', Max(Taskcode)), 6))) ,6) as TaskCode
      from    tblTasks
    </ActionSQL>
    <ActionSQL>
      insert
      into  tblTasks
      (     TaskCode,
            TaskDescription,
            TaskType,
            CustomerCode,
            Category,
            PrimaryDeveloper,
            CompletedDate
      )
      values
      (     @TaskCode,
            @CI_Prompt + ' - Research',
            'A: Research',
            'CDI',
            '000: CoRE',
            'Adrian',
            dateserial(year(now()), month(now()) + 1, 0)
      )
    </ActionSQL>
    <ActionSQL>
      select  'T'+right('000000'+ trim(str(1+Right(iif(isnull(Max(Taskcode)), 'T000000', Max(Taskcode)), 6))) ,6) as TaskCode
      from    tblTasks
    </ActionSQL>
    <ActionSQL>
      insert
      into  tblTasks
      (     TaskCode,
            TaskDescription,
            TaskType,
            CustomerCode,
            Category,
            PrimaryDeveloper,
            CompletedDate
      )
      values
      (     @TaskCode,
            @CI_Prompt + ' - Customer Service',
            'B: Support',
            'CDI',
            '000: CoRE',
            'Adrian',
            dateserial(year(now()), month(now()) + 1, 0)
      )
    </ActionSQL>
    <ActionSQL>
      select  'T'+right('000000'+ trim(str(1+Right(iif(isnull(Max(Taskcode)), 'T000000', Max(Taskcode)), 6))) ,6) as TaskCode
      from    tblTasks
    </ActionSQL>
    <ActionSQL>
      insert
      into  tblTasks
      (     TaskCode,
            TaskDescription,
            TaskType,
            CustomerCode,
            Category,
            PrimaryDeveloper,
            CompletedDate
      )
      values
      (     @TaskCode,
            @CI_Prompt + ' - Quote and Promote',
            'C: Quote',
            'CDI',
            '000: CoRE',
            'Adrian',
            dateserial(year(now()), month(now()) + 1, 0)
      )
    </ActionSQL>
    <ActionSQL>
      select  'T'+right('000000'+ trim(str(1+Right(iif(isnull(Max(Taskcode)), 'T000000', Max(Taskcode)), 6))) ,6) as TaskCode
      from    tblTasks
    </ActionSQL>
    <ActionSQL>
      insert
      into  tblTasks
      (     TaskCode,
            TaskDescription,
            TaskType,
            CustomerCode,
            Category,
            PrimaryDeveloper,
            CompletedDate
      )
      values
      (     @TaskCode,
            @CI_Prompt + ' - Meet and Plan',
            'D: Plan',
            'CDI',
            '000: CoRE',
            'Adrian',
            dateserial(year(now()), month(now()) + 1, 0)
      )
    </ActionSQL>
    <ActionSQL>
      select  'T'+right('000000'+ trim(str(1+Right(iif(isnull(Max(Taskcode)), 'T000000', Max(Taskcode)), 6))) ,6) as TaskCode
      from    tblTasks
    </ActionSQL>
    <ActionSQL>
      insert
      into  tblTasks
      (     TaskCode,
            TaskDescription,
            TaskType,
            CustomerCode,
            Category,
            PrimaryDeveloper,
            CompletedDate
      )
      values
      (     @TaskCode,
            @CI_Prompt + ' - Review Finances',
            'E: Finance',
            'CDI',
            '000: CoRE',
            'Adrian',
            dateserial(year(now()), month(now()) + 1, 0)
      )
    </ActionSQL>
    <VisibleSQL>
      select  1
      from    tblSingleton
      where   @Category = '000: CoRE'
      and     @CI_DefaultUser = 'Adrian'
      and     day(now()) &lt; 8
    </VisibleSQL>
    <AutoRefresh>true</AutoRefresh>
  </CiAction>
  <CiAction>
    <ActionName>Test Me</ActionName>
    <ActionSQL>
      select 'Hello Maw' as TaskDescription,
      'Team' as PrimaryDeveloper,
      #31 Dec 2017# as CompletedDate,
      True as FixedPrice
    </ActionSQL>
    <MessageSQL>
      select 'Hello Adrian Chen'
    </MessageSQL>
  </CiAction>
  <CiCellExitAction>
    <ColumnName>TaskStatus</ColumnName>
    <ActionSQL>
      select  Date() as CompletedDate
      from    tblSingleton
      where   @TaskStatus = '3: Closed'
      and     @CompletedDate is null
    </ActionSQL>
  </CiCellExitAction>
  <CiCellExitAction>
    <ColumnName>CustomerCode</ColumnName>
    <ActionSQL>
      select Billable as Billable
      from   tblCustomers where CustomerCode = @CustomerCode
    </ActionSQL>
  </CiCellExitAction>
  <CiCellExitAction>
    <ColumnName>HoursSold</ColumnName>
    <ActionSQL>
      UPDATE tblTasks INNER JOIN tblStaff on tblTasks.PrimaryDeveloper = tblStaff.StaffCode SET
	SellPrice = @HoursSold * tblStaff.SellHourlyRate
      WHERE TaskCode = @TaskCode AND @HoursSold is not null
    </ActionSQL>
    <ActionSQL>
	SELECT SellPrice,
               iif(@FixedPrice = false,DSum("BuyPrice","qryHourlyCalculation","TaskCode='" + @TaskCode + "'"), BuyHourlyRate*@HoursSold) as BuyPrice
        FROM   tblTasks,
               tblStaff
        WHERE  tblTasks.TaskCode = @TaskCode
        AND    tblStaff.StaffCode = tblTasks.PrimaryDeveloper
    </ActionSQL>
  </CiCellExitAction>
  <CiCellExitAction>
    <ColumnName>FixedPrice</ColumnName>
    <ActionSQL>
	SELECT iif(@FixedPrice = false,DSum("BuyPrice","qryHourlyCalculation","TaskCode='" + @TaskCode + "'"), BuyHourlyRate*@HoursSold) as BuyPrice
        FROM   tblTasks,
               tblStaff
        WHERE  tblTasks.TaskCode = @TaskCode
        AND    tblStaff.StaffCode = tblTasks.PrimaryDeveloper
    </ActionSQL>
  </CiCellExitAction>
  <CiFormat>
    <FormatName>TasksBeingTimed</FormatName>
    <SelectSQL>
      select  distinct TaskCode
      from    tblTimings
      where   EndTime is null
    </SelectSQL>
    <ColumnStyle>Color:Red</ColumnStyle>
    <Editable>false</Editable>
  </CiFormat>
</CodistriGrid>