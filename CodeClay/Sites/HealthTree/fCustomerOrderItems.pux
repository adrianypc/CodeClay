<?xml version="1.0" encoding="utf-8"?>
<CiTable>
  <TableName>fCustomerOrderItems</TableName>
  <TableCaption>Customer Order Items</TableCaption>
  <BubbleUpdate>true</BubbleUpdate>
  <RowKey>CustomerOrderNo,ProductID</RowKey>
  <CiField>
    <FieldName>DummyForInsert</FieldName>
    <Hidden>true</Hidden>
  </CiField>
  <CiField>
    <FieldName>CustomerOrderNo</FieldName>
    <Hidden>true</Hidden>
    <Mask>None</Mask>
  </CiField>
  <CiField>
    <FieldName>CurrentProductID</FieldName>
    <Hidden>true</Hidden>
    <Mask>None</Mask>
  </CiField>
  <CiField>
    <FieldName>CustomerOrderItemNo</FieldName>
    <Caption>Line#</Caption>
    <Mask>None</Mask>
  </CiField>
  <CiComboField>
    <FieldName>ProductID</FieldName>
    <Caption>Product</Caption>
    <DropdownSQL>select ProductID,ProductName from Product order by ProductName</DropdownSQL>
    <TextFieldName>ProductName</TextFieldName>
    <DropdownWidth>800</DropdownWidth>
    <Mask>None</Mask>
  </CiComboField>
  <CiNumericField>
    <FieldName>Quantity</FieldName>
    <Caption>Quantity Ordered</Caption>
    <Width>20</Width>
    <Mask>None</Mask>
  </CiNumericField>
  <CiCurrencyField>
    <FieldName>UnitPrice</FieldName>
    <Caption>Unit Price ($)</Caption>
    <Mandatory>true</Mandatory>
    <Width>20</Width>
    <Mask>None</Mask>
  </CiCurrencyField>
  <CiCurrencyField>
    <FieldName>Amount</FieldName>
    <Caption>Price ($)</Caption>
    <Mandatory>true</Mandatory>
    <Width>20</Width>
    <Mask>None</Mask>
  </CiCurrencyField>
  <CiCheckField>
    <FieldName>DropShipping</FieldName>
    <Caption>Drop Shipping</Caption>
    <Mask>None</Mask>
  </CiCheckField>
  <DefaultMacro>
    <ActionSQL>
        select coalesce(1 + max(CustomerOrderItemNo), 1) as CustomerOrderItemNo,
                @CustomerOrderNo as CustomerOrderNo
        from CustomerOrderItems
        where CustomerOrderNo = @CustomerOrderNo
    </ActionSQL>
  </DefaultMacro>
  <SelectMacro>
    <ActionSQL>?exec spCustomerOrderItems_selbyCustomerOrderNo @CustomerOrderNo</ActionSQL>
  </SelectMacro>
  <InsertMacro>
    <ActionSQL>
            select coalesce(1 + max(CustomerOrderItemNo), 1) as CustomerOrderItemNo
            from CustomerOrderItems 
            where CustomerOrderNo = @CustomerOrderNo
        </ActionSQL>
    <ActionSQL>
            ?exec spCustomerOrderItems_upd
                @CustomerOrderItemNo,
                @CustomerOrderNo,
                @CurrentProductID,
                @ProductID,
                @Quantity,
                @Amount,
                @DropShipping,
                @UnitPrice
        </ActionSQL>
    <VisibleSQL>select 1 from CustomerOrders where CustomerOrderNo = @CustomerOrderNo and Status not in ('Dispatched','Cancelled')</VisibleSQL>
  </InsertMacro>
  <UpdateMacro>
    <ActionSQL>
            ?exec spCustomerOrderItems_upd
                @CustomerOrderItemNo,
                @CustomerOrderNo,
                @CurrentProductID,
                @ProductID,
                @Quantity,
                @Amount,
                @DropShipping,
                @UnitPrice
        </ActionSQL>
    <VisibleSQL>
            select 1 from CustomerOrderItems COI
            inner join CustomerOrders CO
            on COI.CustomerOrderNo = CO.CustomerOrderNo
            where COI.CustomerOrderNo = @CustomerOrderNo
            and COI.ProductID = @ProductID
            and CO.Status not in ('Dispatched','Cancelled')
        </VisibleSQL>
  </UpdateMacro>
  <DeleteMacro>
    <ActionSQL>exec spCustomerOrderItems_del @CustomerOrderItemNo,@CustomerOrderNo</ActionSQL>
    <VisibleSQL>
            select 1 from CustomerOrderItems COI
            inner join CustomerOrders CO
            on COI.CustomerOrderNo = CO.CustomerOrderNo
            where COI.CustomerOrderNo = @CustomerOrderNo
            and COI.CustomerOrderItemNo = @CustomerOrderItemNo
            and CO.Status not in ('Dispatched','Cancelled')
        </VisibleSQL>
  </DeleteMacro>
  <CiFieldExitMacro>
    <FieldName>ProductID</FieldName>
    <ActionSQL>
            select
            coalesce(CPL.DiscountedSellPrice,P.UnitSellingPrice) as UnitPrice,
            case
            when CO.Platform = 'BB' then @Quantity * (coalesce(CPL.DiscountedSellPrice,P.UnitSellingPrice) - (coalesce(CPL.DiscountedSellPrice,P.UnitSellingPrice) * 0.3))
            else @Quantity * coalesce(CPL.DiscountedSellPrice,P.UnitSellingPrice)
            end as Amount,
            case when IsDropShipping = 'Y' then CAST(1 AS bit) else CAST(0 as bit) end as DropShipping
            from CustomerOrders CO
            left outer join CustomerPriceList CPL
            on CO.CustomerID = CPL.CustomerID
            and CPL.ProductID = @ProductID
            left outer join Product P
            on P.ProductID = @ProductID
            where	CO.CustomerOrderNo = @CustomerOrderNo
        </ActionSQL>
  </CiFieldExitMacro>
  <CiFieldExitMacro>
    <FieldName>Quantity</FieldName>
    <FieldName>UnitPrice</FieldName>
    <ActionSQL>
            select
            case
                when CO.Platform = 'BB' then @Quantity * (@UnitPrice - (@UnitPrice * 0.3))
                else @Quantity * @UnitPrice
            end as Amount
            from CustomerOrders CO
            left outer join CustomerPriceList CPL
            on CO.CustomerID = CPL.CustomerID
            and CPL.ProductID = @ProductID
            left outer join Product P
            on P.ProductID = @ProductID
            where	CO.CustomerOrderNo = @CustomerOrderNo
        </ActionSQL>
  </CiFieldExitMacro>
  <CiFieldExitMacro>
    <FieldName>Amount</FieldName>
    <ActionSQL>
            select
                case when IsDropShipping = 'Y' then CAST(1 AS bit) else CAST(0 as bit) end as DropShipping,
                cast((@Amount / @Quantity) * 1.00 as money) as UnitPrice
            from Product
            where	ProductID = @ProductID
        </ActionSQL>
  </CiFieldExitMacro>
</CiTable>