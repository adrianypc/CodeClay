<?xml version="1.0" encoding="utf-8" ?>
<CiTable>
    <TableName>CustomerOrderPayment</TableName>
    <TableCaption>Manual Payment</TableCaption>
    <RowKey>CustomerOrderNo,PaymentNo</RowKey>
    <DefaultView>Grid</DefaultView>
    <CiField>
        <FieldName>CustomerOrderNo</FieldName>
        <Hidden>true</Hidden>
    </CiField>
    <CiField>
        <FieldName>PaymentNo</FieldName>
        <Hidden>true</Hidden>
    </CiField>
    <CiDateField>
        <FieldName>PaymentDate</FieldName>
        <Caption>Date</Caption>
        <Editable>true</Editable>
        <ColumnFormat>dd/MM/yyyy</ColumnFormat>
        <Mandatory>true</Mandatory>
    </CiDateField>
    <CiTextField>
        <FieldName>PaymentBy</FieldName>
        <Caption>Author</Caption>
        <width>20</width>
    </CiTextField>
    <CiTextField>
        <FieldName>PaymentAmount</FieldName>
        <Caption>Payment ($)</Caption>
        <Width>20</Width>
        <Mask>Currency</Mask>
        <Editable>true</Editable>
        <Mandatory>true</Mandatory>
    </CiTextField>
    <DefaultMacro>
        <ActionSQL>
            select
                @CustomerOrderNo as CustomerOrderNo,
                current_timestamp as PaymentDate,
                (select coalesce(OtherNames+' '+Surname,'') from ApplicationUser where Email = @CI_UserEmail) as PaymentBy,
                coalesce(CO.TotalAmount,0) -  coalesce(sum(coalesce(PaymentAmount,0)),0) as PaymentAmount
            from CustomerOrders CO
            left outer join CustomerOrderPayment P
            on CO.CustomerOrderNo = P.CustomerOrderNo
            where CO.CustomerOrderNo = @CustomerOrderNo
            group by CO.TotalAmount
        </ActionSQL>
    </DefaultMacro>
    <SelectMacro>
	    <ActionSQL>
            select  CustomerOrderNo,
                    PaymentNo,
                    PaymentDate,
                    PaymentBy,
                    cast(PaymentAmount as decimal(10,2)) as PaymentAmount
            from CustomerOrderPayment
            where CustomerOrderNo = @CustomerOrderNo
        </ActionSQL>
    </SelectMacro>
    <InsertMacro>
        <ValidateSQL>
            select
            'Total payments cannot exceed Order Total.'
            from CustomerOrders CO
            left outer join CustomerOrderPayment P
            on CO.CustomerOrderNo = P.CustomerOrderNo
            where CO.CustomerOrderNo = @CustomerOrderNo
            group by CO.TotalAmount
            having coalesce(sum(coalesce(PaymentAmount,0)),0) + @PaymentAmount > CO.TotalAmount
        </ValidateSQL>
        <ActionSQL>
            select isnull(1 + max(PaymentNo), 1) as PaymentNo 
            from CustomerOrderPayment 
            where CustomerOrderNo = @CustomerOrderNo
        </ActionSQL>
        <ActionSQL>
            insert into CustomerOrderPayment (CustomerOrderNo,PaymentNo,PaymentDate,PaymentBy,PaymentAmount) values
            (@CustomerOrderNo,@PaymentNo,@PaymentDate,@PaymentBy,@PaymentAmount)
        </ActionSQL>
    </InsertMacro>
    <UpdateMacro>
        <ValidateSQL>
            select
            'Total payments cannot exceed Order Total.'
            from CustomerOrders CO
            left outer join CustomerOrderPayment P
            on CO.CustomerOrderNo = P.CustomerOrderNo
            where CO.CustomerOrderNo = @CustomerOrderNo
            and P.PaymentNo != @PaymentNo
            group by CO.TotalAmount
            having coalesce(sum(coalesce(PaymentAmount,0)),0) + @PaymentAmount > CO.TotalAmount
        </ValidateSQL>
        <ActionSQL>
            update CustomerOrderPayment set
                PaymentDate = @PaymentDate,
                PaymentBy = @PaymentBy,
                PaymentAmount = @PaymentAmount
            where CustomerOrderNo = @CustomerOrderNo
            and PaymentNo = @PaymentNo
        </ActionSQL>
    </UpdateMacro>
</CiTable>