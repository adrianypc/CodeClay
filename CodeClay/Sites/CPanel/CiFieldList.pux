<?xml version="1.0" encoding="utf-8" ?>
<CiTable>
	<TableName>CiFieldList</TableName>
	<TableCaption>Field List</TableCaption>
	<DefaultView>Grid</DefaultView>
  <RowKey>AppID,TableID,FieldID</RowKey>
  <DoubleClickMacroName>Details</DoubleClickMacroName>
  <CiField>
    <FieldName>AppID</FieldName>
    <Caption>App ID</Caption>
    <Hidden>true</Hidden>
  </CiField>
  <CiField>
    <FieldName>TableID</FieldName>
    <Caption>Table ID</Caption>
    <Hidden>true</Hidden>
  </CiField>
  <CiNumericField>
    <FieldName>FieldID</FieldName>
    <Caption>Field ID</Caption>
    <Width>5</Width>
  </CiNumericField>
  <CiTextField>
    <FieldName>OldFieldID</FieldName>
    <Caption>Field ID</Caption>
    <Hidden>true</Hidden>
    <Width>5</Width>
    <Computed>true</Computed>
    <Value>FieldID</Value>
  </CiTextField>
  <CiTextField>
    <FieldName>FieldName</FieldName>
    <Caption>Field Name</Caption>
    <Width>20</Width>
  </CiTextField>
  <CiTextField>
    <FieldName>Caption</FieldName>
    <Caption>Caption</Caption>
  </CiTextField>
  <CiComboField>
    <FieldName>Type</FieldName>
    <Caption>Type</Caption>
    <DropdownSQL>select Code from Dropdown where Category = 'FieldType'</DropdownSQL>
    <Width>10</Width>
    <DropdownWidth>100</DropdownWidth>
  </CiComboField>
  <CiNumericField>
    <FieldName>Width</FieldName>
    <Caption lang="sql">select 'Width ' + case when DefaultView = 'Card' then 'px' else '%' end from CiTable where AppID = @AppID and TableID = @TableID</Caption>
    <Value>10</Value>
    <Width>10</Width>
  </CiNumericField>
  <CiCheckField>
    <FieldName>InRowKey</FieldName>
    <Caption>Primary Key</Caption>
    <Width>10</Width>
  </CiCheckField>
  <DefaultMacro>
    <ActionSQL>
      select  '- New -' as FieldID
    </ActionSQL>
  </DefaultMacro>
  <SelectMacro>
    <ActionSQL>?exec spField_sel @AppID, @TableID, null</ActionSQL>
  </SelectMacro>
  <InsertMacro>
    <ActionSQL>?exec spField_ins @AppID, @TableID, @FieldName, @Caption, @Type, @Width, @InRowKey</ActionSQL>
    <ActionSQL>select @AppID as AppID, @TableID as TableID</ActionSQL>
    <CiSerializeMacro>
      <Direction>Download</Direction>
    </CiSerializeMacro>
  </InsertMacro>
  <UpdateMacro>
    <ActionSQL>exec spField_updShort @AppID, @TableID, @FieldID, @OldFieldID, @FieldName, @Caption, @Type, @Width, @InRowKey</ActionSQL>
    <ActionSQL>select @AppID as AppID, @TableID as TableID</ActionSQL>
    <VisibleSQL>select 1 from Singleton where isnumeric(@FieldID) = 1 and @FieldID &gt; 1</VisibleSQL>
    <CiSerializeMacro>
      <Direction>Download</Direction>
    </CiSerializeMacro>
  </UpdateMacro>
  <DeleteMacro>
    <ActionSQL>exec spField_del  @AppID, @TableID, @FieldID</ActionSQL>
    <ActionSQL>select @AppID as AppID, @TableID as TableID</ActionSQL>
    <VisibleSQL>select 1 from Singleton where isnumeric(@FieldID) = 1 and @FieldID &gt; 1</VisibleSQL>
    <CiSerializeMacro>
      <Direction>Download</Direction>
    </CiSerializeMacro>
  </DeleteMacro>
  <CiMacro>
    <MacroName>Details</MacroName>
    <Caption>Details</Caption>
    <ActionSQL>
      select  @AppID as AppID,
              @TableID as TableID,
              @FieldID as FieldID,
              'Ci' + coalesce(@Type, '') + 'FieldDetails.pux' as NavigateUrl
      from    Singleton
      where   @Type not in ('Table', 'Memo') or @Type is null
      union
      select  @AppID as AppID,
              NestedTableID as TableID,
              null as FieldID,
              'CiTableDetails.pux' as NavigateUrl
      from    CiField
      where   AppID = @AppID
      and     TableID = @TableID
      and     FieldID = @FieldID
      and     @Type = 'Table'
      union
      select  @AppID as AppID,
              @TableID as TableID,
              @FieldID as FieldID,
              'CiTextFieldDetails.pux' as NavigateUrl
      from    Singleton
      where   @Type = 'Memo'
    </ActionSQL>
    <NavigatePos>NewTab</NavigatePos>
    <VisibleSQL>select 1 from Singleton where @Type != 'AutoIncrement' or @Type is null</VisibleSQL>
  </CiMacro>
</CiTable>